name: Install SuperCollider under OSX
description: Install SuperCollider under OSX
inputs:
  branch:
    description: SuperCollider branch
    required: false
    default: develop
  origin:
    description: SuperCollider repo origin
    required: false
    default: https://github.com/supercollider/supercollider.git
runs:
  using: "composite"
  steps:

    - name: Clone SuperCollider
      run: |
        git clone \
          --quiet \
          --recursive \
          --branch ${{ inputs.branch }} \
          ${{ inputs.origin }} \
          /tmp/supercollider
      shell: bash

    - name: Setup ENV
      run: |
        echo CMAKE_OSX_ARCHITECTURES="arm64" >> $GITHUB_ENV;
        echo DEVELOPER_DIR="/Applications/Xcode_16.0.app/Contents/Developer"
        echo HOMEBREW_NO_ANALYTICS=1 >> $GITHUB_ENV;
        echo HOMEBREW_NO_AUTO_UPDATE=1 >> $GITHUB_ENV;
        echo HOMEBREW_NO_ENV_HINTS=1 >> $GITHUB_ENV;
        echo HOMEBREW_NO_INSTALL_CLEANUP=1 >> $GITHUB_ENV;
        echo MACOSX_DEPLOYMENT_TARGET=11 >> $GITHUB_ENV;
      shell: bash

    - name: Cache current date
      id: current-date
      run: |
        echo "stamp=$(date '+%Y-%m-%d')" >> $GITHUB_OUTPUT
        echo "week=$(date '+%U')" >> $GITHUB_OUTPUT
      shell: bash

    - name: Cache ccache
      uses: actions/cache@v4
      with:
        path: ~/Library/Caches/ccache
        key: ccache-${{ runner.os }}-${{ steps.current-date.outputs.stamp }}
        restore-keys: ccache-${{ runner.os }}-

    - name: Cleanup homebrew downloads
      run: rm -rf $(brew --cache)/downloads
      shell: bash

    - name: Cache Homebrew
      id: cache-homebrew
      uses: actions/cache@v4
      with:
        path: ~/Library/Caches/Homebrew/downloads
        key: homebrew-${{ runner.os }}-${{ steps.current-date.outputs.week }}
        restore-keys: homebrew-${{ runner.os }}-

    - name: Setup ccache
      run: |
        brew install ccache --quiet
        echo "`brew --prefix ccache`/libexec" >> $GITHUB_PATH
      shell: bash

    - name: Install homebrew packages
      run: brew install fftw libsndfile portaudio readline
      shell: bash

    - name: Configure
      run: |
        # See: https://scsynth.org/t/supercollider-doesnt-build-with-appleclang-15/9251/2
        # See: https://stackoverflow.com/a/77503976/24356658
        mkdir /tmp/supercollider/build
        cd /tmp/supercollider/build
        cmake \
          -DRULE_LAUNCH_COMPILE=ccache \
          -DSC_ED=OFF \
          -DSC_EL=OFF \
          -DSC_IDE=OFF \
          -DSC_QT=OFF \
          -DSC_VIM=OFF \
          -DSUPERNOVA=ON \
          -GXcode \
          ..
      shell: bash

    - name: Build
      run: cmake --build /tmp/supercollider/build --config Release --target install
      shell: bash

    - name: Install
      run: |
        echo "/tmp/supercollider/build/Install/SuperCollider/SuperCollider.app/Contents/MacOS" >> $GITHUB_PATH
        echo "/tmp/supercollider/build/Install/SuperCollider/SuperCollider.app/Contents/Resources" >> $GITHUB_PATH
        mkdir -p "/Users/runner/Library/Application Support/SuperCollider/synthdefs"
      shell: bash

    - name: Debug ccache
      run: ccache --show-stats --show-config
      shell: bash

#   - name: Sanity-check scsynth
#     run: |
#       echo "Sanity-checking scsynth..."
#       scsynth -v
#       scsynth -h || true
#       sudo -E su ${USER} -c "scsynth -D 0 -H default\:snchk -R 0 -u 57110" &
#       sleep 5
#       killall scsynth
#     shell: bash

#   - name: Sanity-check supernova
#     run: |
#       echo "Sanity-checking supernova..."
#       supernova -v
#       supernova -h || true
#       sudo -E su ${USER} -c "supernova -D 0 -H default\:snchk -R 0 -u 57110" &
#       sleep 5
#       killall supernova
#     shell: bash
